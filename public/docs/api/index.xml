<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>API Reference | TzStats</title>
    <link>https://tzstats.com/docs/api/</link>
    <description>Recent content on API Reference | TzStats</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://tzstats.com/docs/api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>General | TzStats Data API</title>
      <link>https://tzstats.com/docs/api/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tzstats.com/docs/api/api/</guid>
      <description>Introduction  API Endpoints
 Mainnet: https://api.tzstats.com Mainnet Staging: https://api.staging.tzstats.com Zeronet: https://api.zeronet.tzstats.com Babylonnet: https://api.babylonnet.tzstats.com Carthagenet: https://api.carthagenet.tzstats.com Labnet: https://api.labnet.tzstats.com TzStats provides a powerful API to access fully indexed raw data and statistics collected from the Tezos blockchain. You may use this API free of charge and without limits for non-commercial projects. To inquire about commercial use send an email to license@blockwatch.cc.
This API reference provides information on all public API endpoints and the different schemes of calling them.</description>
    </item>
    
    <item>
      <title>Explorer | TzStats Data API</title>
      <link>https://tzstats.com/docs/api/explorer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tzstats.com/docs/api/explorer/</guid>
      <description>Explorer Endpoints Explorer endpoints serve individual large JSON objects and a few related lists. JSON objects use the typical JSON key/value structure and you cannot limit the contents of objects (i.e. they are always sent in full). CSV format is not supported here.
Most explorer endpoints take different kinds of path arguments to define the object to return. This can be:
 a regular hash for blocks, operations or accounts the string head for the most recent object on the blockchain (e.</description>
    </item>
    
    <item>
      <title>Tables | TzStats Data API</title>
      <link>https://tzstats.com/docs/api/tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tzstats.com/docs/api/tables/</guid>
      <description>Table Endpoints  Generic Table Query
 https://api.tzstats.com/tables/{table_code}.{format}?{args} Tables store data in tabular form as a set of columns. Each column has a specified type and each row has a unique uint64 row_id. Empty values are represented as JSON null or empty strings. Tables can grow extremely large, so its good practice to use filters and the columns query argument to limit the result size. Table responses are automatically sorted by row_id.</description>
    </item>
    
    <item>
      <title>Time-Series | TzStats Data API</title>
      <link>https://tzstats.com/docs/api/timeseries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tzstats.com/docs/api/timeseries/</guid>
      <description>Time-Series Endpoints  Generic Time-Series Query
 https://api.tzstats.com/series/{table_code}.{format}?{args} The time-series API is an abstraction over tables which allows for server-side aggregation of multiple result rows over time. Time-series are meant to be displayed as graphs with time on the x-axis and some aggregate value on the y-axis. Since the underlying data is still in tabular form all table filters work on time-series as well.
Note that this time-series API does not fill gaps.</description>
    </item>
    
    <item>
      <title>Changelog | TzStats Data API</title>
      <link>https://tzstats.com/docs/api/changelog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tzstats.com/docs/api/changelog/</guid>
      <description>Changelog Recent changes and additions to the TzStats Data API.
2020-06-24 To handle the surge in volume we&amp;rsquo;re optimizing a few of the most heavily used API endpoints. Our aim is to improve user experience and stabilty for everybody.
The most important change is that we begin migrating operation listings on explorer endpoints from embedded arrays inside accounts/blocks to stand-alone arrays. Both flavors will be available in parallel for a while.</description>
    </item>
    
  </channel>
</rss>